{"version":3,"sources":["assets/campus-splash.jpg","firebase.js","components/Picker/Picker.js","screens/Home/Home.js","screens/Chat/Chat.js","screens/Admin/Admin.js","App.js","index.js"],"names":["module","exports","firestore","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","provider","GoogleAuthProvider","Picker","props","setClass","setSchool","classes","schools","setSelectedClass","setSelectedSchool","selectedSchool","selectedClass","onSubmit","e","preventDefault","className","htmlFor","onChange","target","value","id","name","map","school","key","split","join","c","SignIn","onClick","signInWithPopup","Home","setCurrentScreen","useAuthState","user","currentUser","email","src","splashImage","alt","Chat","currentClass","currentSchool","ChatBox","ChatMessage","message","text","sender_name","sender_email","photoURL","dummy","useRef","messagesRef","collection","doc","query","orderBy","useCollectionData","idField","messages","useState","formValue","setFormValue","sendMessage","a","displayName","add","timestamp","FieldValue","serverTimestamp","useEffect","current","scrollIntoView","behavior","msg","ref","placeholder","type","Admin","schoolName","databaseRef","set","console","log","addClass","App","schoolsQuery","classesQuery","currentScreen","ReactDOM","render","document","getElementById"],"mappings":"0GAAAA,EAAOC,QAAU,IAA0B,2C,gQCarCC,EAXcC,IAASC,cAAc,CACvCC,OAAQ,0CACRC,WAAY,wCACZC,YAAa,+CACbC,UAAW,wBACXC,cAAe,oCACfC,kBAAmB,gBACnBC,MAAO,6CACPC,cAAe,iBAGWV,YACxBW,EAAOV,IAASU,OAChBC,EAAW,IAAIX,IAASU,KAAKE,mBAGpBb,I,MCbA,SAASc,EAAOC,GAAQ,IAEnCC,EAWED,EAXFC,SAGAC,EAQEF,EARFE,UACAC,EAOEH,EAPFG,QACAC,EAMEJ,EANFI,QACAC,EAKEL,EALFK,iBACAC,EAIEN,EAJFM,kBACAC,EAGEP,EAHFO,eACAC,EAEER,EAFFQ,cACAC,EACET,EADFS,SAGF,OACE,0BACEA,SAAU,SAACC,GACTA,EAAEC,iBACFT,EAAUK,GACVN,EAASO,GACLC,GACFA,KAGJG,UAAWZ,EAAMY,WAEjB,2BAAOC,QAAQ,gBAAf,WACA,4BACEC,SAAU,SAACJ,GAAD,OAAOJ,EAAkBI,EAAEK,OAAOC,QAC5CC,GAAG,eACHC,KAAK,eACLF,MAAOT,GAENH,GACCA,EAAQe,KAAI,SAACC,GAAD,OACV,4BAAQC,IAAKD,EAAOH,GAAGK,MAAM,KAAKC,KAAK,IAAKP,MAAOI,EAAOH,IACvDG,EAAOH,QAIhB,2BAAOJ,QAAQ,eAAf,UACA,4BACEC,SAAU,SAACJ,GAAD,OAAOL,EAAiBK,EAAEK,OAAOC,QAC3CC,GAAG,cACHC,KAAK,cACLF,MAAOR,GAENL,GACCA,EAAQgB,KAAI,SAACK,GAAD,OACV,4BAAQH,IAAKG,EAAEP,GAAID,MAAOQ,EAAEP,IACzBO,EAAEP,QAIX,2C,YCeN,SAASQ,EAAOzB,GAId,OACE,4BAAQY,UAAWZ,EAAMY,UAAWc,QAJb,WACvB9B,EAAK+B,gBAAgB9B,KAGrB,uBAYW+B,MAlFf,SAAc5B,GAAQ,IAElBC,EAWED,EAXFC,SAGAC,EAQEF,EARFE,UACAC,EAOEH,EAPFG,QACAC,EAMEJ,EANFI,QACAyB,EAKE7B,EALF6B,iBACAvB,EAIEN,EAJFM,kBACAD,EAGEL,EAHFK,iBACAG,EAEER,EAFFQ,cACAD,EACEP,EADFO,eAZiB,EAeJuB,YAAalC,GAArBmC,EAfY,oBAiBnB,OACE,yBAAKnB,UAAU,QACb,gCACE,8CACA,yBAAKA,UAAU,WACb,4BACGmB,IAAoC,2BAA3BnC,EAAKoC,YAAYC,OAAiE,wBAA3BrC,EAAKoC,YAAYC,QAChF,4BACE,4BAAQP,QAAS,kBAAMG,EAAiB,WAAxC,aAMV,8BACE,yBAAKjB,UAAU,oBACb,yBAAKsB,IAAKC,IAAaC,IAAI,mBAE5BL,EACC,kBAAC,EAAD,CACEtB,SAAU,kBAAMoB,EAAiB,SACjCjB,UAAU,cAGVX,SAAUA,EACVC,UAAWA,EACXE,QAASA,EACTD,QAASA,EACTK,cAAeA,EACfD,eAAgBA,EAChBF,iBAAkBA,EAClBC,kBAAmBA,IAGrB,kBAACmB,EAAD,CAAQb,UAAU,mBAGtB,4BAAQA,UAAU,qBAChB,uEAEE,6BAFF,2C,4FCtDO,SAASyB,EAAKrC,GAAQ,IAEjCC,EAWED,EAXFC,SACAqC,EAUEtC,EAVFsC,aACApC,EASEF,EATFE,UACAqC,EAQEvC,EARFuC,cACApC,EAOEH,EAPFG,QACAC,EAMEJ,EANFI,QACAE,EAKEN,EALFM,kBACAD,EAIEL,EAJFK,iBACAG,EAGER,EAHFQ,cACAD,EAEEP,EAFFO,eACAsB,EACE7B,EADF6B,iBAGF,OACE,yBAAKjB,UAAU,QACb,yBAAKA,UAAU,WACb,yBAAKA,UAAU,qBACb,kBAAC,IAAD,CAAUA,UAAU,cACpB,yBAAKA,UAAU,aACb,kBAAC,EAAD,CACEA,UAAU,cAGVX,SAAUA,EACVC,UAAWA,EACXE,QAASA,EACTD,QAASA,EACTK,cAAeA,EACfD,eAAgBA,EAChBF,iBAAkBA,EAClBC,kBAAmBA,MAIzB,yBAAKM,UAAU,yBACb,8BAAO0B,IAET,kBAAC,IAAD,CAAUZ,QAAS,kBAAIG,EAAiB,SAAQjB,UAAU,eAE5D,kBAAC4B,EAAD,CAASF,aAAcA,EAAcC,cAAeA,KAK1D,SAASE,EAAYzC,GAAO,MAQtBA,EAAM0C,QALRC,EAHwB,EAGxBA,KACAC,EAJwB,EAIxBA,YACAC,EALwB,EAKxBA,aAEAC,EAPwB,EAOxBA,SAGF,OACE,yBAAKlC,UAAU,WACb,6BAAMkC,EAAW,yBAAKV,IAAI,eAAeF,IAAKY,IAAe,IAC7D,2BACE,gCACGF,EADH,KACkBC,EADlB,KAGA,6BACCF,IAMT,SAASH,EAAQxC,GACf,IAAM+C,EAAQC,mBAGRC,EAAchE,EACjBiE,WAAW,WACXC,IAAInD,EAAMuC,eACVW,WAAW,WACXC,IAAInD,EAAMsC,cACVY,WAAW,YAGRE,EAAQH,EAAYI,QAAQ,aAZZ,EAeHC,YAAkBF,EAAO,CAAEG,QAAS,OAAhDC,EAfe,sBAkBYC,mBAAS,IAlBrB,mBAkBfC,EAlBe,KAkBJC,EAlBI,KAqBhBC,EAAW,uCAAG,WAAOlD,GAAP,qBAAAmD,EAAA,yDAElBnD,EAAEC,iBAFgB,EAIuBf,EAAKoC,YAAtC8B,EAJU,EAIVA,YAAa7B,EAJH,EAIGA,MAAOa,EAJV,EAIUA,UAExBY,EANc,gCAQVT,EAAYc,IAAI,CACpBpB,KAAMe,EACNM,UAAW9E,IAASD,UAAUgF,WAAWC,kBACzCtB,YAAakB,EACbjB,aAAcZ,EACda,aAbc,OAiBhBa,EAAa,IAjBG,2CAAH,sDA0BjB,OAJAQ,qBAAU,kBAAMpB,EAAMqB,QAAQC,eAAe,CAAEC,SAAU,aAAa,CACpEd,IAIA,yBAAK5C,UAAU,kBACb,yBAAKA,UAAU,eACb,uBAAGA,UAAU,mBAAb,yCAIC4C,GACCA,EAASrC,KAAI,SAACoD,GAAD,OAAS,kBAAC9B,EAAD,CAAapB,IAAKkD,EAAItD,GAAIyB,QAAS6B,OAC3D,yBAAKC,IAAKzB,KAEZ,0BAAMnC,UAAU,iBAAiBH,SAAUmD,GACzC,2BACEhD,UAAU,WACVI,MAAO0C,EACP5C,SAAU,SAACJ,GAAD,OAAOiD,EAAajD,EAAEK,OAAOC,QACvCyD,YAAY,kBAEd,4BAAQ7D,UAAU,WAAW8D,KAAK,UAAlC,U,MC7IO,SAASC,EAAM3E,GAAQ,IAC5B6B,EAA8B7B,EAA9B6B,iBAAkBzB,EAAYJ,EAAZI,QADS,EAEDqD,mBAAS,IAFR,mBAE5BC,EAF4B,KAEjBC,EAFiB,OAGSF,mBAAS,wBAHlB,mBAG5BlD,EAH4B,KAGZD,EAHY,iDAKnC,WAAwBI,EAAGkE,EAAYhE,GAAvC,iBAAAiD,EAAA,6DACEnD,EAAEC,kBACIkE,EAAc5F,EACjBiE,WAAW,WACXC,IAAIyB,GACJ1B,WAAW,WACXC,IAAIvC,IAEKkE,IAAI,CACd7D,GAAIL,IAGAqC,EAAc4B,EAAY3B,WAAW,YAZ7C,SAcQD,EAAYc,IAAI,CACpBpB,KAAM,gBACNqB,UAAW9E,IAASD,UAAUgF,WAAWC,kBACzCtB,YAAa,QACbC,aAAc,UAlBlB,OAqBEkC,QAAQC,IAAR,yBAA8BJ,EAA9B,cAA8ChE,EAA9C,MACA+C,EAAa,IAtBf,4CALmC,sBA6BnC,OACE,yBAAK/C,UAAU,SACb,4BAAQA,UAAU,cAAcc,QAAS,kBAAMG,EAAiB,UAAhE,QACA,0BACEjB,UAAU,aACVH,SAAU,SAACC,GAAD,OAlCmB,+CAkCZuE,CAASvE,EAAGH,EAAgBmD,KAE7C,2BAAO7C,QAAQ,gBAAf,WACA,4BACEC,SAAU,SAACJ,GAAD,OAAOJ,EAAkBI,EAAEK,OAAOC,QAC5CC,GAAG,eACHC,KAAK,eACLF,MAAOT,GAENH,GACCA,EAAQe,KAAI,SAACC,GAAD,OACV,4BAAQC,IAAKD,EAAOH,GAAGK,MAAM,KAAKC,KAAK,IAAKP,MAAOI,EAAOH,IACvDG,EAAOH,QAIhB,2BACED,MAAO0C,EACPe,YAAY,gBACZ3D,SAAU,SAACJ,GAAD,OAAOiD,EAAajD,EAAEK,OAAOC,UAEzC,+CCpDO,SAASkE,EAAIlF,GAAO,MAEEyD,mBAAS,wBAFX,mBAE1BlB,EAF0B,KAEXrC,EAFW,OAGAuD,mBAAS,WAHT,mBAG1BnB,EAH0B,KAGZrC,EAHY,OAIWwD,mBAASlB,GAJpB,mBAI1BhC,EAJ0B,KAIVD,EAJU,OAKSmD,mBAASnB,GALlB,mBAK1B9B,EAL0B,KAKXH,EALW,KAO3B8E,EAAelG,EAAUiE,WAAW,WACpCkC,EAAeD,EAAahC,IAAI5C,GAAgB2C,WAAW,WARhC,EAUfI,YAAkB6B,EAAc,CAAE5B,QAAS,OAAtDnD,EAV0B,sBAWfkD,YAAkB8B,EAAc,CAAE7B,QAAS,OAAtDpD,EAX0B,sBAaSsD,mBAAS,QAblB,mBAa1B4B,EAb0B,KAaXxD,EAbW,KAejC,MAAsB,SAAlBwD,EAEA,kBAAC,EAAD,CACE/C,aAAcA,EACdC,cAAeA,EACf/B,cAAeA,EACfD,eAAgBA,EAChBN,SAAUA,EACVC,UAAWA,EACXE,QAASA,EACTD,QAASA,EACTgF,aAAcA,EACdC,aAAcA,EACdvD,iBAAkBA,EAClBxB,iBAAkBA,EAClBC,kBAAmBA,IAGI,SAAlB+E,EAEP,kBAAC,EAAD,CACExD,iBAAkBA,EAClBS,aAAcA,EACdC,cAAeA,EACf/B,cAAeA,EACfD,eAAgBA,EAChBF,iBAAkBA,EAClBC,kBAAmBA,EACnBL,SAAUA,EACVC,UAAWA,EACXE,QAASA,EACTD,QAASA,EACTgF,aAAcA,EACdC,aAAcA,IAGS,UAAlBC,EACF,kBAAC,EAAD,CACPxD,iBAAkBA,EAClBzB,QAASA,SAHJ,ECvDTkF,IAASC,OACL,kBAACL,EAAD,MACFM,SAASC,eAAe,W","file":"static/js/main.7f787775.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/campus-splash.3195ce31.jpg\";","import firebase from \"firebase\";\r\n\r\nconst firebaseApp = firebase.initializeApp({\r\n    apiKey: \"AIzaSyCyDHGruN8xp9eVLQMLnZvRfebsz0Xf0PI\",\r\n    authDomain: \"school-chat-app-b3b2e.firebaseapp.com\",\r\n    databaseURL: \"https://school-chat-app-b3b2e.firebaseio.com\",\r\n    projectId: \"school-chat-app-b3b2e\",\r\n    storageBucket: \"school-chat-app-b3b2e.appspot.com\",\r\n    messagingSenderId: \"1015167689558\",\r\n    appId: \"1:1015167689558:web:38f0fe084e2aa585c0acf7\",\r\n    measurementId: \"G-2W8824YD6F\"\r\n});\r\n\r\nconst firestore = firebaseApp.firestore();\r\nconst auth = firebase.auth();\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport {auth,provider};\r\nexport default firestore;","import React from \"react\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\nimport \"./Picker.css\";\r\n\r\nexport default function Picker(props) {\r\n  const {\r\n    setClass,\r\n    // currentClass,\r\n    // currentSchool,\r\n    setSchool,\r\n    classes,\r\n    schools,\r\n    setSelectedClass,\r\n    setSelectedSchool,\r\n    selectedSchool,\r\n    selectedClass,\r\n    onSubmit\r\n  } = props;\r\n\r\n  return (\r\n    <form\r\n      onSubmit={(e) => {\r\n        e.preventDefault();\r\n        setSchool(selectedSchool);\r\n        setClass(selectedClass);\r\n        if (onSubmit){\r\n          onSubmit();\r\n        }\r\n      }}\r\n      className={props.className}\r\n    >\r\n      <label htmlFor=\"input-school\">School:</label>\r\n      <select\r\n        onChange={(e) => setSelectedSchool(e.target.value)}\r\n        id=\"input-school\"\r\n        name=\"input-school\"\r\n        value={selectedSchool}\r\n      >\r\n        {schools &&\r\n          schools.map((school) => (\r\n            <option key={school.id.split(\" \").join(\"\")} value={school.id}>\r\n              {school.id}\r\n            </option>\r\n          ))}\r\n      </select>\r\n      <label htmlFor=\"input-class\">Class:</label>\r\n      <select\r\n        onChange={(e) => setSelectedClass(e.target.value)}\r\n        id=\"input-class\"\r\n        name=\"input-class\"\r\n        value={selectedClass}\r\n      >\r\n        {classes &&\r\n          classes.map((c) => (\r\n            <option key={c.id} value={c.id}>\r\n              {c.id}\r\n            </option>\r\n          ))}\r\n      </select>\r\n      <button>Submit</button>\r\n    </form>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\n\r\nimport \"./Home.css\";\r\nimport splashImage from \"../../assets/campus-splash.jpg\";\r\nimport { auth, provider } from \"../../firebase\";\r\nimport Picker from \"../../components/Picker/Picker\";\r\nimport { useAuthState } from \"react-firebase-hooks/auth\";\r\n\r\nfunction Home(props) {\r\n  const {\r\n    setClass,\r\n    // currentClass,\r\n    // currentSchool,\r\n    setSchool,\r\n    classes,\r\n    schools,\r\n    setCurrentScreen,\r\n    setSelectedSchool,\r\n    setSelectedClass,\r\n    selectedClass,\r\n    selectedSchool,\r\n  } = props;\r\n\r\n  const [user] = useAuthState(auth);\r\n\r\n  return (\r\n    <div className=\"Home\">\r\n      <header>\r\n        <h1>Campus Connect</h1>\r\n        <nav className=\"top-bar\">\r\n          <ul>\r\n            {user && (auth.currentUser.email === \"conor@conorroberts.com\" || auth.currentUser.email === \"sante4832@gmail.com\")  && (\r\n              <li>\r\n                <button onClick={() => setCurrentScreen(\"admin\")}>Admin</button>\r\n              </li>\r\n            )}\r\n          </ul>\r\n        </nav>\r\n      </header>\r\n      <main>\r\n        <div className=\"splash-container\">\r\n          <img src={splashImage} alt=\"Campus splash\" />\r\n        </div>\r\n        {user ? (\r\n          <Picker\r\n            onSubmit={() => setCurrentScreen(\"chat\")}\r\n            className=\"home-picker\"\r\n            // currentClass={currentClass}\r\n            // currentSchool={currentSchool}\r\n            setClass={setClass}\r\n            setSchool={setSchool}\r\n            schools={schools}\r\n            classes={classes}\r\n            selectedClass={selectedClass}\r\n            selectedSchool={selectedSchool}\r\n            setSelectedClass={setSelectedClass}\r\n            setSelectedSchool={setSelectedSchool}\r\n          />\r\n        ) : (\r\n          <SignIn className=\"google-signin\" />\r\n        )}\r\n      </main>\r\n      <footer className=\"contact-container\">\r\n        <span>\r\n          Conor Roberts : Conor@ConorRoberts.com\r\n          <br></br>\r\n          Eric Santos : santeric2001@gmail.com\r\n        </span>\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction SignIn(props) {\r\n  const signInWithGoogle = () => {\r\n    auth.signInWithPopup(provider);\r\n  };\r\n  return (\r\n    <button className={props.className} onClick={signInWithGoogle}>\r\n      Sign in with Google\r\n    </button>\r\n  );\r\n}\r\n\r\n// function SignOut() {\r\n//   return (\r\n//     auth.currentUser && <button onClick={() => auth.signOut()}>Sign Out</button>\r\n//   );\r\n// }\r\n\r\nexport default Home;\r\n","import \"./Chat.css\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport firestore, { auth } from \"../../firebase\";\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\nimport { useCollectionData } from \"react-firebase-hooks/firestore\";\r\nimport Picker from \"../../components/Picker/Picker\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport HomeIcon from '@material-ui/icons/Home';\r\n\r\nexport default function Chat(props) {\r\n  const {\r\n    setClass,\r\n    currentClass,\r\n    setSchool,\r\n    currentSchool,\r\n    classes,\r\n    schools,\r\n    setSelectedSchool,\r\n    setSelectedClass,\r\n    selectedClass,\r\n    selectedSchool,\r\n    setCurrentScreen\r\n  } = props;\r\n\r\n  return (\r\n    <div className=\"Chat\">\r\n      <div className=\"top-bar\">\r\n        <div className=\"sidebar-container\">\r\n          <MenuIcon className=\"menu-icon\" />\r\n          <div className=\"side-menu\">\r\n            <Picker\r\n              className=\"chat-picker\"\r\n              // currentClass={currentClass}\r\n              // currentSchool={currentSchool}\r\n              setClass={setClass}\r\n              setSchool={setSchool}\r\n              schools={schools}\r\n              classes={classes}\r\n              selectedClass={selectedClass}\r\n              selectedSchool={selectedSchool}\r\n              setSelectedClass={setSelectedClass}\r\n              setSelectedSchool={setSelectedSchool}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"class-label-container\">\r\n          <span>{currentClass}</span>\r\n        </div>\r\n        <HomeIcon onClick={()=>setCurrentScreen(\"home\")}className=\"home-icon\"/>\r\n      </div>\r\n      <ChatBox currentClass={currentClass} currentSchool={currentSchool} />\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction ChatMessage(props) {\r\n  // Retrieving text from message object (passed as prop)\r\n  const {\r\n    text,\r\n    sender_name,\r\n    sender_email,\r\n    // timestamp,\r\n    photoURL,\r\n  } = props.message;\r\n\r\n  return (\r\n    <div className=\"message\">\r\n      <div>{photoURL ? <img alt=\"Profile icon\" src={photoURL} /> : \"\"}</div>\r\n      <p>\r\n        <strong>\r\n          {sender_name} ({sender_email})\r\n        </strong>\r\n        <br />\r\n        {text}\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction ChatBox(props) {\r\n  const dummy = useRef();\r\n\r\n  // Set reference point for messages collection\r\n  const messagesRef = firestore\r\n    .collection(\"schools\")\r\n    .doc(props.currentSchool)\r\n    .collection(\"classes\")\r\n    .doc(props.currentClass)\r\n    .collection(\"messages\");\r\n\r\n  // Organizing message data retrieved from messagesRef\r\n  const query = messagesRef.orderBy(\"timestamp\");\r\n\r\n  // Not sure what this does. Result saved in messages\r\n  const [messages] = useCollectionData(query, { idField: \"id\" });\r\n\r\n  // Used for modifying text box value\r\n  const [formValue, setFormValue] = useState(\"\");\r\n\r\n  // Function for sending message\r\n  const sendMessage = async (e) => {\r\n    // Prevent browser refresh on form submission\r\n    e.preventDefault();\r\n\r\n    const { displayName, email, photoURL } = auth.currentUser;\r\n\r\n    if (formValue) {\r\n      // Add message to firebase collection\r\n      await messagesRef.add({\r\n        text: formValue,\r\n        timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n        sender_name: displayName,\r\n        sender_email: email,\r\n        photoURL,\r\n      });\r\n\r\n      // Reset form value\r\n      setFormValue(\"\");\r\n    }\r\n  };\r\n\r\n  // Scroll last message into view on change of messages\r\n  useEffect(() => dummy.current.scrollIntoView({ behavior: \"smooth\" }), [\r\n    messages,\r\n  ]);\r\n\r\n  return (\r\n    <div className=\"chat-component\">\r\n      <div className=\"chat-window\">\r\n        <p className=\"beginning-label\">This is the beginning of the messages</p>\r\n        {/* Checks if there are any messages\r\n        renders out all messages, passing the firebase message ID in as the key (for react rendering)\r\n        passes in entire message object for use within later functions */}\r\n        {messages &&\r\n          messages.map((msg) => <ChatMessage key={msg.id} message={msg} />)}\r\n        <div ref={dummy}></div>\r\n      </div>\r\n      <form className=\"form-container\" onSubmit={sendMessage}>\r\n        <input\r\n          className=\"send-box\"\r\n          value={formValue}\r\n          onChange={(e) => setFormValue(e.target.value)}\r\n          placeholder=\"   Message...\"\r\n        />\r\n        <button className=\"send-btn\" type=\"submit\">\r\n          Send\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport \"./Admin.css\";\r\nimport firestore from \"../../firebase\";\r\nimport firebase from \"firebase\";\r\n\r\nexport default function Admin(props) {\r\n  const { setCurrentScreen, schools } = props;\r\n  const [formValue, setFormValue] = useState(\"\");\r\n  const [selectedSchool, setSelectedSchool] = useState(\"University of Guelph\");\r\n\r\n  async function addClass(e, schoolName, className) {\r\n    e.preventDefault();\r\n    const databaseRef = firestore\r\n      .collection(\"schools\")\r\n      .doc(schoolName)\r\n      .collection(\"classes\")\r\n      .doc(className);\r\n\r\n    databaseRef.set({\r\n      id: className,\r\n    });\r\n\r\n    const messagesRef = databaseRef.collection(\"messages\");\r\n\r\n    await messagesRef.add({\r\n      text: \"First message\",\r\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n      sender_name: \"Admin\",\r\n      sender_email: \"admin\",\r\n    });\r\n\r\n    console.log(`Added class to ${schoolName} > ${className}.`);\r\n    setFormValue(\"\");\r\n  }\r\n  return (\r\n    <div className=\"Admin\">\r\n      <button className=\"home-button\" onClick={() => setCurrentScreen(\"home\")}>Home</button>\r\n      <form\r\n        className=\"admin-form\"\r\n        onSubmit={(e) => addClass(e, selectedSchool, formValue)}\r\n      >\r\n        <label htmlFor=\"input-school\">School:</label>\r\n        <select\r\n          onChange={(e) => setSelectedSchool(e.target.value)}\r\n          id=\"input-school\"\r\n          name=\"input-school\"\r\n          value={selectedSchool}\r\n        >\r\n          {schools &&\r\n            schools.map((school) => (\r\n              <option key={school.id.split(\" \").join(\"\")} value={school.id}>\r\n                {school.id}\r\n              </option>\r\n            ))}\r\n        </select>\r\n        <input\r\n          value={formValue}\r\n          placeholder=\"Class name...\"\r\n          onChange={(e) => setFormValue(e.target.value)}\r\n        />\r\n        <button>Add Class</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport Home from \"./screens/Home/Home\";\r\nimport Chat from \"./screens/Chat/Chat\";\r\nimport Admin from \"./screens/Admin/Admin\";\r\n\r\nimport { useCollectionData } from \"react-firebase-hooks/firestore\";\r\nimport firestore from \"./firebase\";\r\n\r\nexport default function App(props) {\r\n  //State for current class\r\n  const [currentSchool, setSchool] = useState(\"University of Guelph\");\r\n  const [currentClass, setClass] = useState(\"MCS1000\");\r\n  const [selectedSchool, setSelectedSchool] = useState(currentSchool);\r\n  const [selectedClass, setSelectedClass] = useState(currentClass);\r\n\r\n  const schoolsQuery = firestore.collection(\"schools\");\r\n  const classesQuery = schoolsQuery.doc(selectedSchool).collection(\"classes\");\r\n\r\n  const [schools] = useCollectionData(schoolsQuery, { idField: \"id\" });\r\n  const [classes] = useCollectionData(classesQuery, { idField: \"id\" });\r\n\r\n  const [currentScreen, setCurrentScreen] = useState(\"home\");\r\n\r\n  if (currentScreen === \"chat\") {\r\n    return (\r\n      <Chat\r\n        currentClass={currentClass}\r\n        currentSchool={currentSchool}\r\n        selectedClass={selectedClass}\r\n        selectedSchool={selectedSchool}\r\n        setClass={setClass}\r\n        setSchool={setSchool}\r\n        schools={schools}\r\n        classes={classes}\r\n        schoolsQuery={schoolsQuery}\r\n        classesQuery={classesQuery}\r\n        setCurrentScreen={setCurrentScreen}\r\n        setSelectedClass={setSelectedClass}\r\n        setSelectedSchool={setSelectedSchool}\r\n      />\r\n    );\r\n  } else if (currentScreen === \"home\") {\r\n    return (\r\n      <Home\r\n        setCurrentScreen={setCurrentScreen}\r\n        currentClass={currentClass}\r\n        currentSchool={currentSchool}\r\n        selectedClass={selectedClass}\r\n        selectedSchool={selectedSchool}\r\n        setSelectedClass={setSelectedClass}\r\n        setSelectedSchool={setSelectedSchool}\r\n        setClass={setClass}\r\n        setSchool={setSchool}\r\n        schools={schools}\r\n        classes={classes}\r\n        schoolsQuery={schoolsQuery}\r\n        classesQuery={classesQuery}\r\n      />\r\n    );\r\n  } else if (currentScreen === \"admin\") {\r\n    return <Admin \r\n    setCurrentScreen={setCurrentScreen}\r\n    schools={schools} \r\n    />;\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}