{"version":3,"sources":["assets/campus-splash.jpg","firebase.js","components/Picker/Picker.js","screens/Home/Home.js","components/ChatMessage/ChatMessage.js","components/ChatBox/ChatBox.js","screens/Chat/Chat.js","screens/Admin/Admin.js","App.js","index.js"],"names":["module","exports","firestore","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","provider","GoogleAuthProvider","Picker","props","setClass","setSchool","classes","schools","setSelectedClass","setSelectedSchool","selectedSchool","selectedClass","onSubmit","e","preventDefault","className","htmlFor","onChange","target","value","id","name","map","school","key","split","join","c","SignIn","onClick","signInWithPopup","Home","setCurrentScreen","useAuthState","user","currentUser","email","src","splashImage","alt","ChatMessage","message","text","sender_name","sender_email","photoURL","is_question","ChatBox","dummy","useRef","messagesRef","collection","doc","currentSchool","currentClass","query","orderBy","useCollectionData","idField","messages","useState","questionState","setQuestionState","formValue","setFormValue","sendMessage","a","displayName","add","timestamp","FieldValue","serverTimestamp","useEffect","current","scrollIntoView","behavior","questionMenuState","setQuestionMenuState","msg","ref","filter","placeholder","type","Chat","Admin","schoolName","databaseRef","set","console","log","addClass","App","schoolsQuery","classesQuery","currentScreen","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b873b1e0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/campus-splash.3195ce31.jpg\";","import firebase from \"firebase\";\r\n\r\nconst firebaseApp = firebase.initializeApp({\r\n    apiKey: \"AIzaSyCyDHGruN8xp9eVLQMLnZvRfebsz0Xf0PI\",\r\n    authDomain: \"school-chat-app-b3b2e.firebaseapp.com\",\r\n    databaseURL: \"https://school-chat-app-b3b2e.firebaseio.com\",\r\n    projectId: \"school-chat-app-b3b2e\",\r\n    storageBucket: \"school-chat-app-b3b2e.appspot.com\",\r\n    messagingSenderId: \"1015167689558\",\r\n    appId: \"1:1015167689558:web:38f0fe084e2aa585c0acf7\",\r\n    measurementId: \"G-2W8824YD6F\"\r\n});\r\n\r\nconst firestore = firebaseApp.firestore();\r\nconst auth = firebase.auth();\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport {auth,provider};\r\nexport default firestore;","import React from \"react\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\nimport \"./Picker.css\";\r\n\r\nexport default function Picker(props) {\r\n  const {\r\n    setClass,\r\n    // currentClass,\r\n    // currentSchool,\r\n    setSchool,\r\n    classes,\r\n    schools,\r\n    setSelectedClass,\r\n    setSelectedSchool,\r\n    selectedSchool,\r\n    selectedClass,\r\n    onSubmit\r\n  } = props;\r\n\r\n  return (\r\n    <form\r\n      onSubmit={(e) => {\r\n        e.preventDefault();\r\n        setSchool(selectedSchool);\r\n        setClass(selectedClass);\r\n        if (onSubmit){\r\n          onSubmit();\r\n        }\r\n      }}\r\n      className={props.className}\r\n    >\r\n      <label htmlFor=\"input-school\">School:</label>\r\n      <select\r\n        onChange={(e) => setSelectedSchool(e.target.value)}\r\n        id=\"input-school\"\r\n        name=\"input-school\"\r\n        value={selectedSchool}\r\n      >\r\n        {schools &&\r\n          schools.map((school) => (\r\n            <option key={school.id.split(\" \").join(\"\")} value={school.id}>\r\n              {school.id}\r\n            </option>\r\n          ))}\r\n      </select>\r\n      <label htmlFor=\"input-class\">Class:</label>\r\n      <select\r\n        onChange={(e) => setSelectedClass(e.target.value)}\r\n        id=\"input-class\"\r\n        name=\"input-class\"\r\n        value={selectedClass}\r\n      >\r\n        {classes &&\r\n          classes.map((c) => (\r\n            <option key={c.id} value={c.id}>\r\n              {c.id}\r\n            </option>\r\n          ))}\r\n      </select>\r\n      <button>Submit</button>\r\n    </form>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\n\r\nimport \"./Home.css\";\r\nimport splashImage from \"../../assets/campus-splash.jpg\";\r\nimport { auth, provider } from \"../../firebase\";\r\nimport Picker from \"../../components/Picker/Picker\";\r\nimport { useAuthState } from \"react-firebase-hooks/auth\";\r\n\r\nfunction Home(props) {\r\n  const {\r\n    setClass,\r\n    setSchool,\r\n    classes,\r\n    schools,\r\n    setCurrentScreen,\r\n    setSelectedSchool,\r\n    setSelectedClass,\r\n    selectedClass,\r\n    selectedSchool,\r\n  } = props;\r\n\r\n  const [user] = useAuthState(auth);\r\n\r\n  return (\r\n    <div className=\"Home\">\r\n      <header>\r\n        <h1>Campus Connect</h1>\r\n        <nav className=\"top-bar\">\r\n          <ul>\r\n            {user &&\r\n              (auth.currentUser.email === \"conor@conorroberts.com\" ||\r\n                auth.currentUser.email === \"sante4832@gmail.com\") && (\r\n                <li>\r\n                  <button onClick={() => setCurrentScreen(\"admin\")}>\r\n                    Admin\r\n                  </button>\r\n                </li>\r\n              )}\r\n          </ul>\r\n        </nav>\r\n      </header>\r\n      <main>\r\n        <div className=\"splash-container\">\r\n          <img src={splashImage} alt=\"Campus splash\" />\r\n        </div>\r\n        {user ? (\r\n          <Picker\r\n            onSubmit={() => setCurrentScreen(\"chat\")}\r\n            className=\"home-picker\"\r\n            setClass={setClass}\r\n            setSchool={setSchool}\r\n            schools={schools}\r\n            classes={classes}\r\n            selectedClass={selectedClass}\r\n            selectedSchool={selectedSchool}\r\n            setSelectedClass={setSelectedClass}\r\n            setSelectedSchool={setSelectedSchool}\r\n          />\r\n        ) : (\r\n          <SignIn className=\"google-signin\" />\r\n        )}\r\n      </main>\r\n      <footer className=\"contact-container\">\r\n        <span>\r\n          Conor Roberts : Conor@ConorRoberts.com\r\n          <br></br>\r\n          Eric Santos : santeric2001@gmail.com\r\n        </span>\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction SignIn(props) {\r\n  const signInWithGoogle = () => {\r\n    auth.signInWithPopup(provider);\r\n  };\r\n  return (\r\n    <button className={props.className} onClick={signInWithGoogle}>\r\n      Sign in with Google\r\n    </button>\r\n  );\r\n}\r\n\r\n// function SignOut() {\r\n//   return (\r\n//     auth.currentUser && <button onClick={() => auth.signOut()}>Sign Out</button>\r\n//   );\r\n// }\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport \"./ChatMessage.css\";\r\n\r\nexport default function ChatMessage(props) {\r\n    // Retrieving text from message object (passed as prop)\r\n    const {\r\n      text,\r\n      sender_name,\r\n      sender_email,\r\n      // timestamp,\r\n      photoURL,\r\n      is_question,\r\n    } = props.message;\r\n  \r\n    return (\r\n      <div className={`ChatMessage message ${is_question ? \"question\" : \"\"}`}>\r\n        <div>{photoURL ? <img alt=\"Profile icon\" src={photoURL} /> : \"\"}</div>\r\n        <p>\r\n          <strong>\r\n            {sender_name} ({sender_email})\r\n          </strong>\r\n          <br />\r\n          {text}\r\n        </p>\r\n      </div>\r\n    );\r\n  }","import React, { useEffect, useState, useRef } from \"react\";\r\nimport firestore, { auth } from \"../../firebase\";\r\nimport ChatMessage from \"../ChatMessage/ChatMessage\";\r\nimport { useCollectionData } from \"react-firebase-hooks/firestore\";\r\nimport firebase from \"firebase/app\";\r\nimport LiveHelpIcon from \"@material-ui/icons/LiveHelp\";\r\nimport \"./ChatBox.css\";\r\nimport ContactSupportIcon from \"@material-ui/icons/ContactSupport\";\r\n\r\nexport default function ChatBox(props) {\r\n  const dummy = useRef();\r\n\r\n  // Set reference point for messages collection\r\n  const messagesRef = firestore\r\n    .collection(\"schools\")\r\n    .doc(props.currentSchool)\r\n    .collection(\"classes\")\r\n    .doc(props.currentClass)\r\n    .collection(\"messages\");\r\n\r\n  // Organizing message data retrieved from messagesRef\r\n  const query = messagesRef.orderBy(\"timestamp\");\r\n\r\n  // Not sure what this does. Result saved in messages\r\n  const [messages] = useCollectionData(query, { idField: \"id\" });\r\n\r\n  const [questionState, setQuestionState] = useState(false);\r\n\r\n  // Used for modifying text box value\r\n  const [formValue, setFormValue] = useState(\"\");\r\n\r\n  // Function for sending message\r\n  const sendMessage = async (e) => {\r\n    // Prevent browser refresh on form submission\r\n    e.preventDefault();\r\n\r\n    const { displayName, email, photoURL } = auth.currentUser;\r\n\r\n    if (formValue) {\r\n      // Add message to firebase collection\r\n      await messagesRef.add({\r\n        text: formValue,\r\n        timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n        sender_name: displayName,\r\n        sender_email: email,\r\n        photoURL,\r\n        is_question: questionState,\r\n      });\r\n\r\n      // Reset form value\r\n      setFormValue(\"\");\r\n    }\r\n  };\r\n\r\n  // Scroll last message into view on change of messages\r\n  useEffect(() => dummy.current.scrollIntoView({ behavior: \"smooth\" }), [\r\n    messages,\r\n  ]);\r\n\r\n  const [questionMenuState, setQuestionMenuState] = useState(false);\r\n\r\n  return (\r\n    <div className=\"ChatBox\">\r\n      <div className={questionMenuState ? \"chat-window squished\" : \"chat-window\"}>\r\n        <p className=\"beginning-label\">This is the beginning of the messages</p>\r\n        {messages &&\r\n          messages.map((msg) => <ChatMessage key={msg.id} message={msg} />)}\r\n        <div ref={dummy}></div>\r\n      </div>\r\n      <ContactSupportIcon\r\n        onClick={() => {\r\n          setQuestionMenuState(!questionMenuState);\r\n        }}\r\n        className=\"questions-menu-button\"\r\n      />\r\n      <div className={questionMenuState ? \"questions-container opened\" : \"questions-container\"}>\r\n        {messages &&\r\n          messages\r\n            .filter((msg) => msg.is_question && msg.is_question === true)\r\n            .map((msg) => (\r\n              <ChatMessage key={msg.id + \"-question\"} message={msg} />\r\n            ))}\r\n      </div>\r\n      <form className=\"form-container\" onSubmit={sendMessage}>\r\n        <input\r\n          className=\"send-box\"\r\n          value={formValue}\r\n          onChange={(e) => setFormValue(e.target.value)}\r\n          placeholder=\"Message...\"\r\n        />\r\n        <button\r\n          onClick={() => setQuestionState(!questionState)}\r\n          className={`question-button ${questionState ? \"on\" : \"off\"}`}\r\n          type=\"button\"\r\n        >\r\n          <LiveHelpIcon className=\"question-icon\" />\r\n        </button>\r\n        <button className=\"send-btn\" type=\"submit\">\r\n          Send\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import \"./Chat.css\";\r\nimport React from \"react\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\nimport Picker from \"../../components/Picker/Picker\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport ChatBox from \"../../components/ChatBox/ChatBox\";\r\n\r\nexport default function Chat(props) {\r\n  const {\r\n    setClass,\r\n    currentClass,\r\n    setSchool,\r\n    currentSchool,\r\n    classes,\r\n    schools,\r\n    setSelectedSchool,\r\n    setSelectedClass,\r\n    selectedClass,\r\n    selectedSchool,\r\n    setCurrentScreen\r\n  } = props;\r\n\r\n  return (\r\n    <div className=\"Chat\">\r\n      <div className=\"top-bar\">\r\n        <div className=\"sidebar-container\">\r\n          <MenuIcon className=\"menu-icon\" />\r\n          <div className=\"side-menu\">\r\n            <Picker\r\n              className=\"chat-picker\"\r\n              setClass={setClass}\r\n              setSchool={setSchool}\r\n              schools={schools}\r\n              classes={classes}\r\n              selectedClass={selectedClass}\r\n              selectedSchool={selectedSchool}\r\n              setSelectedClass={setSelectedClass}\r\n              setSelectedSchool={setSelectedSchool}\r\n            />\r\n          </div>\r\n\r\n        </div>\r\n        <div className=\"question-sidebar-container\">\r\n          {/* <ContactSupportIcon/>\r\n          <div className=\"questions-menu\">\r\n            \r\n          </div> */}\r\n        </div>\r\n        <div className=\"class-label-container\">\r\n          <span>{currentClass}</span>\r\n        </div>\r\n        <HomeIcon onClick={()=>setCurrentScreen(\"home\")}className=\"home-icon\"/>\r\n      </div>\r\n      <ChatBox currentClass={currentClass} currentSchool={currentSchool} />\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport \"./Admin.css\";\r\nimport firestore from \"../../firebase\";\r\nimport firebase from \"firebase\";\r\n\r\nexport default function Admin(props) {\r\n  const { setCurrentScreen, schools } = props;\r\n  const [formValue, setFormValue] = useState(\"\");\r\n  const [selectedSchool, setSelectedSchool] = useState(\"University of Guelph\");\r\n\r\n  async function addClass(e, schoolName, className) {\r\n    e.preventDefault();\r\n    const databaseRef = firestore\r\n      .collection(\"schools\")\r\n      .doc(schoolName)\r\n      .collection(\"classes\")\r\n      .doc(className);\r\n\r\n    databaseRef.set({\r\n      id: className,\r\n    });\r\n\r\n    const messagesRef = databaseRef.collection(\"messages\");\r\n\r\n    await messagesRef.add({\r\n      text: \"First message\",\r\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n      sender_name: \"Admin\",\r\n      sender_email: \"admin\",\r\n    });\r\n\r\n    console.log(`Added class to ${schoolName} > ${className}.`);\r\n    setFormValue(\"\");\r\n  }\r\n  return (\r\n    <div className=\"Admin\">\r\n      <button className=\"home-button\" onClick={() => setCurrentScreen(\"home\")}>\r\n        Home\r\n      </button>\r\n      <form\r\n        className=\"admin-form\"\r\n        onSubmit={(e) => addClass(e, selectedSchool, formValue)}\r\n      >\r\n        <label htmlFor=\"input-school\">School:</label>\r\n        <select\r\n          onChange={(e) => setSelectedSchool(e.target.value)}\r\n          id=\"input-school\"\r\n          name=\"input-school\"\r\n          value={selectedSchool}\r\n        >\r\n          {schools &&\r\n            schools.map((school) => (\r\n              <option key={school.id.split(\" \").join(\"\")} value={school.id}>\r\n                {school.id}\r\n              </option>\r\n            ))}\r\n        </select>\r\n        <input\r\n          value={formValue}\r\n          placeholder=\"Class name...\"\r\n          onChange={(e) => setFormValue(e.target.value)}\r\n        />\r\n        <button type=\"submit\">Add Class</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport Home from \"./screens/Home/Home\";\r\nimport Chat from \"./screens/Chat/Chat\";\r\nimport Admin from \"./screens/Admin/Admin\";\r\n\r\nimport { useCollectionData } from \"react-firebase-hooks/firestore\";\r\nimport firestore from \"./firebase\";\r\n\r\nexport default function App() {\r\n  // State for current class\r\n  const [currentSchool, setSchool] = useState(\"University of Guelph\");\r\n  const [currentClass, setClass] = useState(\"MCS1000\");\r\n\r\n  const [selectedSchool, setSelectedSchool] = useState(currentSchool);\r\n  const [selectedClass, setSelectedClass] = useState(currentClass);\r\n\r\n  const schoolsQuery = firestore.collection(\"schools\");\r\n  const classesQuery = schoolsQuery.doc(selectedSchool).collection(\"classes\");\r\n\r\n  const [schools] = useCollectionData(schoolsQuery, { idField: \"id\" });\r\n  const [classes] = useCollectionData(classesQuery, { idField: \"id\" });\r\n\r\n  const [currentScreen, setCurrentScreen] = useState(\"home\");\r\n\r\n  if (currentScreen === \"chat\") {\r\n    return (\r\n      <Chat\r\n        currentClass={currentClass}\r\n        currentSchool={currentSchool}\r\n        selectedClass={selectedClass}\r\n        selectedSchool={selectedSchool}\r\n        setClass={setClass}\r\n        setSchool={setSchool}\r\n        schools={schools}\r\n        classes={classes}\r\n        schoolsQuery={schoolsQuery}\r\n        classesQuery={classesQuery}\r\n        setCurrentScreen={setCurrentScreen}\r\n        setSelectedClass={setSelectedClass}\r\n        setSelectedSchool={setSelectedSchool}\r\n      />\r\n    );\r\n  } else if (currentScreen === \"home\") {\r\n    return (\r\n      <Home\r\n        setCurrentScreen={setCurrentScreen}\r\n        currentClass={currentClass}\r\n        currentSchool={currentSchool}\r\n        selectedClass={selectedClass}\r\n        selectedSchool={selectedSchool}\r\n        setSelectedClass={setSelectedClass}\r\n        setSelectedSchool={setSelectedSchool}\r\n        setClass={setClass}\r\n        setSchool={setSchool}\r\n        schools={schools}\r\n        classes={classes}\r\n        schoolsQuery={schoolsQuery}\r\n        classesQuery={classesQuery}\r\n      />\r\n    );\r\n  } else if (currentScreen === \"admin\") {\r\n    return <Admin setCurrentScreen={setCurrentScreen} schools={schools} />;\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}