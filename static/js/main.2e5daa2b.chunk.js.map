{"version":3,"sources":["screens/Home.js","firebase.js","screens/Chat.js","index.js"],"names":["Home","firestore","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","GoogleAuthProvider","Chat","className","ChatBox","ChatMessage","props","text","message","dummy","useRef","messagesRef","collection","doc","query","orderBy","useCollectionData","idField","messages","useState","formValue","setFormValue","sendMessage","e","a","preventDefault","add","timestamp","FieldValue","serverTimestamp","current","scrollIntoView","behavior","map","msg","key","id","ref","onSubmit","value","onChange","target","placeholder","type","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kRAaeA,I,yDCATC,EAXcC,IAASC,cAAc,CACvCC,OAAQ,0CACRC,WAAY,wCACZC,YAAa,+CACbC,UAAW,wBACXC,cAAe,oCACfC,kBAAmB,gBACnBC,MAAO,6CACPC,cAAe,iBAGWV,YAKfA,GAJFC,IAASU,OACL,IAAIV,IAASU,KAAKC,mBAGpBZ,G,6CCTA,SAASa,IACtB,OACE,yBAAKC,UAAU,UACb,kBAACC,EAAD,OAKN,SAASC,EAAYC,GAAO,IAElBC,EAASD,EAAME,QAAfD,KACR,OACE,yBAAKJ,UAAU,WACb,2BAAII,IAKV,SAASH,IAEP,IAAMK,EAAQC,mBAERC,EAActB,EACjBuB,WAAW,WACXC,IAAI,WACJD,WAAW,YAGRE,EAAQH,EAAYI,QAAQ,aAVjB,EAaEC,YAAkBF,EAAO,CAAEG,QAAS,OAAhDC,EAbU,sBAgBiBC,mBAAS,IAhB1B,mBAgBVC,EAhBU,KAgBCC,EAhBD,KAmBXC,EAAW,uCAAG,WAAOC,GAAP,SAAAC,EAAA,yDAElBD,EAAEE,kBAEEL,EAJc,gCAMVT,EAAYe,IAAI,CACpBnB,KAAMa,EACNO,UAAWrC,IAASD,UAAUuC,WAAWC,oBAR3B,OAYhBR,EAAa,IAEbZ,EAAMqB,QAAQC,eAAe,CAACC,SAAS,WAdvB,2CAAH,sDAkBjB,OACE,6BACE,yBAAK7B,UAAU,eAIZe,GACCA,EAASe,KAAI,SAACC,GAAD,OAAS,kBAAC7B,EAAD,CAAa8B,IAAKD,EAAIE,GAAI5B,QAAS0B,OAC3D,yBAAKG,IAAK5B,KAEZ,0BAAMN,UAAU,iBAAiBmC,SAAUhB,GACzC,2BACEnB,UAAU,WACVoC,MAAOnB,EACPoB,SAAU,SAACjB,GAAD,OAAOF,EAAaE,EAAEkB,OAAOF,QACvCG,YAAY,kBAEd,4BAAQvC,UAAU,WAAWwC,KAAK,UAAlC,UC3ERC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.2e5daa2b.chunk.js","sourcesContent":["import React from 'react';\nimport './Home.css';\n\nfunction Home() {\n  return (\n    <div className=\"Home\">\n      <header className=\"App-header\">\n        <h1>Hey there</h1>\n      </header>\n    </div>\n  );\n}\n\nexport default Home;\n","import firebase from \"firebase\";\r\n\r\nconst firebaseApp = firebase.initializeApp({\r\n    apiKey: \"AIzaSyCyDHGruN8xp9eVLQMLnZvRfebsz0Xf0PI\",\r\n    authDomain: \"school-chat-app-b3b2e.firebaseapp.com\",\r\n    databaseURL: \"https://school-chat-app-b3b2e.firebaseio.com\",\r\n    projectId: \"school-chat-app-b3b2e\",\r\n    storageBucket: \"school-chat-app-b3b2e.appspot.com\",\r\n    messagingSenderId: \"1015167689558\",\r\n    appId: \"1:1015167689558:web:38f0fe084e2aa585c0acf7\",\r\n    measurementId: \"G-2W8824YD6F\"\r\n});\r\n\r\nconst firestore = firebaseApp.firestore();\r\nconst auth = firebase.auth();\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport {auth,provider};\r\nexport default firestore;","import \"./Chat.css\";\r\nimport React, { useRef,useState } from \"react\";\r\nimport firestore from \"../firebase\";\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\nimport { useAuthState } from \"react-firebase-hooks/auth\";\r\nimport { useCollectionData } from \"react-firebase-hooks/firestore\";\r\n\r\nexport default function Chat() {\r\n  return (\r\n    <div className=\"screen\">\r\n      <ChatBox />\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction ChatMessage(props) {\r\n  // Retrieving text from message object (passed as prop)\r\n  const { text } = props.message;\r\n  return (\r\n    <div className=\"message\">\r\n      <p>{text}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction ChatBox() {\r\n\r\n  const dummy = useRef();\r\n  // Set reference point for messages collection\r\n  const messagesRef = firestore\r\n    .collection(\"classes\")\r\n    .doc(\"MCS1000\")\r\n    .collection(\"messages\");\r\n\r\n  // Organizing message data retrieved from messagesRef\r\n  const query = messagesRef.orderBy(\"timestamp\");\r\n\r\n  // Not sure what this does. Result saved in messages\r\n  const [messages] = useCollectionData(query, { idField: \"id\" });\r\n\r\n  // Used for modifying text box value\r\n  const [formValue, setFormValue] = useState(\"\");\r\n\r\n  // Function for sending message\r\n  const sendMessage = async (e) => {\r\n    // Prevent browser refresh on form submission\r\n    e.preventDefault();\r\n\r\n    if (formValue){\r\n      // Add message to firebase collection\r\n      await messagesRef.add({\r\n        text: formValue,\r\n        timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n      });\r\n  \r\n      // Reset form value\r\n      setFormValue(\"\");\r\n\r\n      dummy.current.scrollIntoView({behavior:\"smooth\"});\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"chat-window\">\r\n        {/* Checks if there are any messages\r\n        renders out all messages, passing the firebase message ID in as the key (for react rendering)\r\n        passes in entire message object for use within later functions */}\r\n        {messages &&\r\n          messages.map((msg) => <ChatMessage key={msg.id} message={msg} />)}\r\n        <div ref={dummy}></div>\r\n      </div>\r\n      <form className=\"form-container\" onSubmit={sendMessage}>\r\n        <input\r\n          className=\"send-box\"\r\n          value={formValue}\r\n          onChange={(e) => setFormValue(e.target.value)}\r\n          placeholder=\"   Message...\"\r\n        />\r\n        <button className=\"send-btn\" type=\"submit\">\r\n          Send\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Home from './screens/Home';\nimport Chat from \"./screens/Chat\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Chat />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}