{"version":3,"sources":["assets/campus-splash.jpg","firebase.js","screens/Home.js","components/Picker.js","screens/Chat.js","App.js","index.js"],"names":["module","exports","firestore","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","GoogleAuthProvider","Picker","props","useState","currentClass","setClass","currentSchool","setSchool","schoolsQuery","collection","classesQuery","doc","useCollectionData","idField","schools","classes","onSubmit","e","className","SchoolPicker","onChange","target","value","ClassPicker","htmlFor","id","name","selected","map","school","key","c","Home","href","src","splashImage","alt","Chat","ChatBox","ChatMessage","text","message","dummy","useRef","messagesRef","query","orderBy","messages","formValue","setFormValue","sendMessage","a","preventDefault","add","timestamp","FieldValue","serverTimestamp","current","scrollIntoView","behavior","msg","ref","placeholder","type","App","formSubmitted","setFormSubmitted","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4ffc5fb5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/campus-splash.3195ce31.jpg\";","import firebase from \"firebase\";\r\n\r\nconst firebaseApp = firebase.initializeApp({\r\n    apiKey: \"AIzaSyCyDHGruN8xp9eVLQMLnZvRfebsz0Xf0PI\",\r\n    authDomain: \"school-chat-app-b3b2e.firebaseapp.com\",\r\n    databaseURL: \"https://school-chat-app-b3b2e.firebaseio.com\",\r\n    projectId: \"school-chat-app-b3b2e\",\r\n    storageBucket: \"school-chat-app-b3b2e.appspot.com\",\r\n    messagingSenderId: \"1015167689558\",\r\n    appId: \"1:1015167689558:web:38f0fe084e2aa585c0acf7\",\r\n    measurementId: \"G-2W8824YD6F\"\r\n});\r\n\r\nconst firestore = firebaseApp.firestore();\r\nconst auth = firebase.auth();\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport {auth,provider};\r\nexport default firestore;","import React, { useState,Component } from \"react\";\nimport firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\n\nimport {useAuthState} from \"react-firebase-hooks/auth\";\nimport { useCollectionData } from \"react-firebase-hooks/firestore\";\nimport './Home.css';\nimport splashImage from \"../assets/campus-splash.jpg\";\nimport firestore,{auth,provider} from \"../firebase\";\n\nfunction Home(props) {\n  const {onSubmit} = props;\n  return (\n    <div className=\"Home\">\n      <header>\n        <h1>App</h1>\n        <nav>\n          <ul>\n            <li>\n              <a href=\"#\">Home</a>\n            </li>\n            <li>\n              <a href=\"#contact\">Contact</a>\n            </li>\n          </ul>\n        </nav>\n      </header>\n      <main>\n        <div className=\"splash-container\">\n          <h1>Hello There</h1>\n          <img src={splashImage} alt=\"Campus splash\"/>\n        </div>\n        <Picker onSubmit={()=>onSubmit(true)}/>\n      </main>\n      <footer id=\"contact\">\n        This is contact info\n      </footer>\n    </div>\n  );\n}\n\nfunction Picker(props){\n  //State for current class\n  const [currentClass,setClass] = useState(\"None\");\n  const [currentSchool,setSchool] = useState(\"Queen's University\");\n\n  const schoolsQuery = firestore\n  .collection(\"schools\");\n  const classesQuery = schoolsQuery\n  .doc(currentSchool)\n  .collection(\"classes\");\n\n  const [schools] = useCollectionData(schoolsQuery,{idField:\"id\"});\n  const [classes] = useCollectionData(classesQuery, { idField: \"id\" });\n  return(\n    <div>\n      <form onSubmit={e=>props.onSubmit(e,currentClass,currentSchool)} className=\"home-form-container\">\n          <SchoolPicker onChange={(e)=>setSchool(e.target.value)} schools={schools}/>\n          <ClassPicker onChange={(e)=>setClass(e.target.value)} classes={classes}/>\n          <button>\n            Submit\n          </button>\n        </form>\n    </div>\n  )\n}\n\nfunction SchoolPicker({onChange,schools}){\n  return(\n    <div className=\"home-form-module\">\n      <label htmlFor=\"input-school\">School:</label>\n      <select onChange={onChange} id=\"input-school\" name=\"input-school\" selected=\"University of Guelph\">\n        {schools && \n        schools.map((school)=><option key={school.id} value={school.id}>{school.id}</option>)}\n      </select>\n    </div>\n  );\n}\n\nfunction ClassPicker({onChange,classes}){\n  return(\n    <div className=\"home-form-module\">\n      <label htmlFor=\"input-class\">Class:</label>\n      <select onChange={onChange} id=\"input-class\" name=\"input-class\" selected=\"None\">\n        {classes && \n        classes.map((c)=><option key={c.id} value={c.id}>{c.id}</option>)}\n      </select>\n    </div>\n  );\n}\n\n\nfunction SignIn(){\n  const signInWithGoogle = () =>{\n    auth.signInWithPopup(provider);\n  }\n  return(\n    <button onClick={signInWithGoogle}>Sign in with Google</button>\n  )\n}\n\nfunction SignOut(){\n  return auth.currentUser && (\n    <button onClick={()=>auth.signOut()}>Sign Out</button>\n  )\n}\n\nexport default Home;\n","import React from \"react\";\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\nimport \"./Picker.css\";\r\n\r\nexport default function Picker(props){\r\n  const {setClass,currentClass,setSchool,currentSchool,classes,schools}=props;\r\n\r\n  return(\r\n    <div>\r\n      <form className={props.className}>\r\n          <label htmlFor=\"input-school\">School:</label>\r\n          <select onChange={(e)=> setSchool(e.target.value)} id=\"input-school\" name=\"input-school\" value={currentSchool}>\r\n            {schools && \r\n            schools.map((school)=><option value={school.id}>{school.id}</option>)}\r\n          </select>\r\n          <label htmlFor=\"input-class\">Class:</label>\r\n          <select onChange={(e)=>setClass(e.target.value)} id=\"input-class\" name=\"input-class\" value={currentClass}>\r\n            {classes && \r\n            classes.map((c)=><option value={c.id}>{c.id}</option>)}\r\n          </select>\r\n        </form>\r\n    </div>\r\n  )\r\n}","import \"./Chat.css\";\r\nimport React, { useRef,useState } from \"react\";\r\nimport firestore from \"../firebase\";\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\nimport { useCollectionData } from \"react-firebase-hooks/firestore\";\r\nimport Picker from \"../components/Picker\";\r\n\r\nexport default function Chat(props) {\r\n\r\n  const {setClass,currentClass,setSchool,currentSchool,classes,schools}=props;\r\n\r\n  return (\r\n    <div className=\"Chat\">\r\n      <div className=\"course-info-container\">\r\n        <Picker className=\"chat-picker\" currentClass={currentClass} currentSchool={currentSchool} setClass={setClass} setSchool={setSchool} schools={schools} classes={classes}/>\r\n      </div>\r\n      <ChatBox currentClass={currentClass} currentSchool={currentSchool}/>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction ChatMessage(props) {\r\n  // Retrieving text from message object (passed as prop)\r\n  const { text } = props.message;\r\n  return (\r\n    <div className=\"message\">\r\n      <p>{text}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction ChatBox(props) {\r\n\r\n  const dummy = useRef();\r\n  // Set reference point for messages collection\r\n\r\n  const messagesRef = firestore\r\n    .collection(props.currentSchool)\r\n    .doc(props.currentClass)\r\n    .collection(\"messages\");\r\n\r\n  // Organizing message data retrieved from messagesRef\r\n  const query = messagesRef.orderBy(\"timestamp\");\r\n\r\n  // Not sure what this does. Result saved in messages\r\n  const [messages] = useCollectionData(query, { idField: \"id\" });\r\n\r\n  // Used for modifying text box value\r\n  const [formValue, setFormValue] = useState(\"\");\r\n\r\n  // Function for sending message\r\n  const sendMessage = async (e) => {\r\n    // Prevent browser refresh on form submission\r\n    e.preventDefault();\r\n\r\n    if (formValue){\r\n      // Add message to firebase collection\r\n      await messagesRef.add({\r\n        text: formValue,\r\n        timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n      });\r\n  \r\n      // Reset form value\r\n      setFormValue(\"\");\r\n\r\n      dummy.current.scrollIntoView({behavior:\"smooth\"});\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"chat-component\">\r\n      <div className=\"chat-window\">\r\n        {/* Checks if there are any messages\r\n        renders out all messages, passing the firebase message ID in as the key (for react rendering)\r\n        passes in entire message object for use within later functions */}\r\n        {messages &&\r\n          messages.map((msg) => <ChatMessage key={msg.id} message={msg} />)}\r\n        <div ref={dummy}></div>\r\n      </div>\r\n      <form className=\"form-container\" onSubmit={sendMessage}>\r\n        <input\r\n          className=\"send-box\"\r\n          value={formValue}\r\n          onChange={(e) => setFormValue(e.target.value)}\r\n          placeholder=\"   Message...\"\r\n        />\r\n        <button className=\"send-btn\" type=\"submit\">\r\n          Send\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\n// function ClassPicker(){\r\n\r\n//   //State for current class\r\n//   const [currentClass,setClass] = useState(\"MCS1000\");\r\n\r\n//   const classesQuery = firestore\r\n//   .collection(\"University of Guelph\");\r\n\r\n//   const [classes] = useCollectionData(classesQuery, { idField: \"id\" });\r\n\r\n//   return(\r\n//     <div className=\"class-picker\">\r\n//       <form>\r\n//         <label for=\"classes\">Class:</label>\r\n//         <select onChange={(e)=>setClass(e.target.value)} id=\"classes\" name=\"classes\">\r\n//           {classes &&\r\n//            classes.map( (c)=> (<option value={c.id}>{c.id}</option>))}\r\n//         </select>\r\n//         <input type=\"submit\"/>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// }\r\n","import React,{useEffect, useState} from \"react\";\r\nimport Home from \"./screens/Home\";\r\nimport Chat from \"./screens/Chat\";\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\n\r\nimport {useAuthState} from \"react-firebase-hooks/auth\";\r\nimport { useCollectionData } from \"react-firebase-hooks/firestore\";\r\nimport firestore,{auth,provider} from \"./firebase\";\r\n\r\nexport default function App(props){\r\n\r\n    //State for current class\r\n    const [currentSchool,setSchool] = useState(\"University of Guelph\");\r\n    const [currentClass,setClass] = useState(\"MCS1000\");\r\n    \r\n    const schoolsQuery = firestore\r\n    .collection(\"schools\");\r\n    const classesQuery = schoolsQuery\r\n    .doc(currentSchool)\r\n    .collection(\"classes\");\r\n    \r\n    const [schools] = useCollectionData(schoolsQuery,{idField:\"id\"});\r\n    const [classes] = useCollectionData(classesQuery, { idField: \"id\" });\r\n\r\n    const [formSubmitted,setFormSubmitted]=useState(false);\r\n\r\n    if (formSubmitted){\r\n        return (\r\n            <div>\r\n                <Chat currentClass={currentClass} currentSchool={currentSchool} setClass={setClass} setSchool={setSchool} schools={schools} classes={classes} schoolsQuery={schoolsQuery} classesQuery={classesQuery}/>\r\n            </div>\r\n        );\r\n    }else{\r\n        return(\r\n            <div>\r\n                <Home onSubmit={setFormSubmitted}/>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from \"./App\";\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}